From ab68f1cccd882695d90a2b62d645e4f6ac2f2d83 Mon Sep 17 00:00:00 2001
From: Sivasubramaniyan Padmanaban <sivasubramaniyan.padmanaban@analog.com>
Date: Wed, 15 Nov 2023 17:31:44 +0530
Subject: [PATCH] drivers: media: i2c: adsd3500.c: Added RAW12 resolution and
 raw enable bypass command

Signed-off-by: Sivasubramaniyan Padmanaban <sivasubramaniyan.padmanaban@analog.com>
---
 drivers/media/i2c/adsd3500.c      | 41 ++++++++++++++++++++++++++++---
 drivers/media/i2c/adsd3500_regs.h |  4 +++
 2 files changed, 41 insertions(+), 4 deletions(-)

diff --git a/drivers/media/i2c/adsd3500.c b/drivers/media/i2c/adsd3500.c
index bbeef72419ed..ed09d00b2c64 100644
--- a/drivers/media/i2c/adsd3500.c
+++ b/drivers/media/i2c/adsd3500.c
@@ -372,6 +372,13 @@ static const struct adsd3500_mode_info adsd3500_mode_info_data[] = {
 		.code = MEDIA_BUS_FMT_SBGGR12_1X12,
 		.link_freq_idx = 0 /* an index in link_freq_tbl[] */
 	},
+	{ //RAW12 12BPP * 9 subframes ADSD3100 512x512x9
+		.width = 1024,
+		.height = 2304,
+		.pixel_rate = 488000000,
+		.code = MEDIA_BUS_FMT_SBGGR12_1X12,
+		.link_freq_idx = 0 /* an index in link_freq_tbl[] */
+	},
 	{ //RAW8 SR MP 2 phase + 1 AB
 		.width = 2048,
 		.height = 2560,
@@ -412,6 +419,27 @@ static const struct regmap_config adsd3500_regmap_config = {
 	.readable_reg = adsd3500_regmap_accessible_reg,
 };
 
+static int adsd3500_enable_raw_mode(struct adsd3500 *adsd3500)
+{
+	int ret;
+
+	dev_dbg(adsd3500->dev, "Entered adsd3500_enable_raw_mode\n");
+
+	ret = regmap_write(adsd3500->regmap, ENABLE_RAW_BYPASS_CMD, ENABLE_VAL);
+	if (ret < 0){
+		dev_err(adsd3500->dev, "Write of ENABLE-RAW command failed.\n");
+		return ret;
+	}
+
+	ret = regmap_write(adsd3500->regmap, ENABLE_EMB_HEADER_CMD, ENABLE_VAL);
+	if (ret < 0){
+		dev_err(adsd3500->dev, "Write of ENABLE-EMB-HEADER command failed.\n");
+		return ret;
+	}
+
+	return ret;
+}
+
 static int adsd3500_power_on(struct device *dev)
 {
 	struct i2c_client *client = to_i2c_client(dev);
@@ -437,6 +465,11 @@ static int adsd3500_power_on(struct device *dev)
 	}
 	dev_dbg(adsd3500->dev, "Read Chip ID: %.4X\n", read_val);
 
+	ret = adsd3500_enable_raw_mode(adsd3500);
+	if(ret < 0) {
+		dev_err(dev, "Failed to enable the ADSD3500 raw bypass mode\n");
+	}
+
 	write_cmd = SET_IMAGER_MODE_CMD | SET_IMAGER_MODE(operating_mode->val);
 
 	write_val |= SET_IMAGER_MODE_DEPTH_EN(config.nr_depth_bits ? depth_en->val : 0);
@@ -599,7 +632,7 @@ static const struct v4l2_ctrl_config adsd3500_ctrl_operating_mode = {
 	.id			= V4L2_CID_ADSD3500_OPERATING_MODE,
 	.name		= "Operating Mode",
 	.type		= V4L2_CTRL_TYPE_INTEGER,
-	.def		= 0,
+	.def		= 1,
 	.min		= 0,
 	.max		= 10,
 	.step		= 1
@@ -657,7 +690,7 @@ static const struct v4l2_ctrl_config adsd3500_ab_avg = {
 	.id			= V4L2_CID_ADSD3500_AB_AVG,
 	.name		= "AB Averaging",
 	.type		= V4L2_CTRL_TYPE_BOOLEAN,
-	.def		= 1,
+	.def		= 0,
 	.min		= 0,
 	.max		= 1,
 	.step		= 1,
@@ -668,7 +701,7 @@ static const struct v4l2_ctrl_config adsd3500_depth_en = {
 	.id			= V4L2_CID_ADSD3500_DEPTH_EN,
 	.name		= "Depth enable",
 	.type		= V4L2_CTRL_TYPE_BOOLEAN,
-	.def		= 1,
+	.def		= 0,
 	.min		= 0,
 	.max		= 1,
 	.step		= 1,
@@ -1069,7 +1102,7 @@ static int adsd3500_init_ctrls(struct adsd3500 *priv){
 	priv->sd.ctrl_handler = &priv->ctrls;
 
 	//Initialize by default to 4 (RAW12, 12 bpp)
-	v4l2_ctrl_s_ctrl(priv->depth_bits, 4);
+	v4l2_ctrl_s_ctrl(priv->depth_bits, 0);
 
 	return 0;
 }
diff --git a/drivers/media/i2c/adsd3500_regs.h b/drivers/media/i2c/adsd3500_regs.h
index db09c27b1688..5be42ba6512e 100644
--- a/drivers/media/i2c/adsd3500_regs.h
+++ b/drivers/media/i2c/adsd3500_regs.h
@@ -48,6 +48,10 @@
 
 #define SET_FRAMERATE_CMD                   0x0022
 #define GET_FRAMERATE_CMD                   0x0023
+#define ENABLE_RAW_BYPASS_CMD				0x0033
+#define ENABLE_EMB_HEADER_CMD				0x0077
+#define ENABLE_VAL					0x0001
+#define DISABLE_VAL					0x0000
 
 #define READ_REGISTER_CMD					0xFFFF
 #define WRITE_REGISTER_CMD					0xFFFF
-- 
2.28.0

